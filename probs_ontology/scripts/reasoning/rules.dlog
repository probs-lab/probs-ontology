
owl:sameAs[?b,?c] :- :belongsToList[?a,?b], :belongsToList[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :metric[?a,?b], :metric[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :measurement[?a,?b], :measurement[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :codeDescription[?a,?b], :codeDescription[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :codeName[?a,?b], :codeName[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :objectDescription[?a,?b], :objectDescription[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :objectName[?a,?b], :objectName[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :partOfDataset[?a,?b], :partOfDataset[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :hasRegion[?a,?b], :hasRegion[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :hasTimePeriod[?a,?b], :hasTimePeriod[?a,?c], FILTER(?b != ?c) .
owl:sameAs[?b,?c] :- :processName[?a,?b], :processName[?a,?c], FILTER(?b != ?c) .

[?O , ufu:numObjectsComposedOf , ?N]
    :- :Object[?O] ,
        AGGREGATE(
            [?O, :objectComposedOf, ?O2]
            ON ?O
            BIND COUNT(?O2) AS ?N) .

[?O, ufu:numObservationsDefinedBy, ?N]
    :- :Object[?O] ,
        AGGREGATE(
            [?Obs, :objectDefinedBy, ?O]
            ON ?O
            BIND COUNT(?Obs) AS ?N) .
[?O, ufu:numObservationsDefinedBy, 0]
    :- :Object[?O] , 
        NOT EXISTS ?Obs IN (
            [?Obs, :objectDefinedBy, ?O]
        ) .

